-- DASHBOARD #1 : SALES DOC FLOW (SALES & AFTER SALES), BACKDATE, CUST COD - CPP (ID7A)
-- Data diambil dari SO_CREATED_DATE '2025-06-01' sd HARI INI

SELECT DISTINCT
  -- BASIC DATA
  SSO.COMPANY_CODE,
  SSO.PLANT AS PLANT_CODE,
  SSO.CUSTOMER AS CUSTOMER_SO_CODE,
  CUST.CUSTOMER_NAME AS CUSTOMER_SO_NAME,
  FLOW.CUSTOMER_SHIP_TO AS CUSTOMER_SHIPTO_CODE,
  CUSTSH.CUSTOMER_NAME AS CUSTOMER_SHIPTO_NAME,
  SB.TERM_OF_PAYMENT,
  SSO.DISTRIBUTION_CHANNEL AS DISTRIBUTION_CHANNEL_CODE,
  SDC.DISTRIBUTION_CHANNEL_DESC,
  SSO.DIVISION_DESC,
  DSR.REGION_DESC,
  CASE 
	WHEN DSR.REGION IN ('01', '02', '03', '04', '05', '28') THEN 'PULAU JAWA'
    ELSE 'LUAR JAWA'
  END AS STATUS_REGION,
  -- TYPE
  FLOW.SALES_ORDER_TYPE,
  FLOW.SALES_ORDER_TYPE_DESC,
  SD.DELIVERY_TYPE,
  SB.BILLING_TYPE, 
  -- STATUS
  SSO.SALES_ORDER_STATUS_DESC,
  SSO.SALES_ORDER_STATUS_REJECTION_DESC,
  SSO.SALES_ORDER_STATUS_DELIVERY_DESC, 
  SSO.SALES_ORDER_STATUS_BILLING_DESC,
  -- DOC NUMBER
  FLOW.SALES_ORDER_NUMBER AS SO_FRANCO,
  FLOW.SO_CSGMNT_NUMBER,
  FLOW.DO_CSGMNT_NUMBER,
  FLOW.DELIVERY_NUMBER AS DO_FRANCO,
  FLOW.BILLING_NUMBER,
  SBC.BILLING_CLEARING_DOC,
  -- DATE TRANSACTION
  TRY_TO_DATE(SSO.SALES_ORDER_CREATED_DATE, 'YYYYMMDD') AS SO_FRA_CREATED_DATE,
  TRY_TO_DATE(SSO.SALES_ORDER_DATE, 'YYYYMMDD') AS SO_FRA_DATE,
  TRY_TO_DATE(SOCSG.SALES_ORDER_CREATED_DATE, 'YYYYMMDD') AS SO_CSGMNT_CREATED_DATE,
  TRY_TO_DATE(SOCSG.SALES_ORDER_DATE, 'YYYYMMDD') AS SO_CSGMNT_DATE,
  TRY_TO_DATE(SDCSG.DELIVERY_CREATED_DATE, 'YYYYMMDD') AS DO_CSGMNT_CREATED_DATE,
  TRY_TO_DATE(SDCSG.DELIVERY_ACTUAL_DATE, 'YYYYMMDD') AS DO_CSGMNT_ACTUAL_DATE,
  TRY_TO_DATE(SD.DELIVERY_CREATED_DATE, 'YYYYMMDD') AS DO_FRA_CREATED_DATE,
  TRY_TO_DATE(SD.DELIVERY_ACTUAL_DATE, 'YYYYMMDD') AS DO_FRA_ACTUAL_DATE,
  TRY_TO_DATE(SB.BILLING_CREATED_DATE, 'YYYYMMDD') AS BILLING_CREATED_DATE,
  TRY_TO_DATE(SB.BILLING_DATE, 'YYYYMMDD') AS BILLING_DATE,
  TRY_TO_DATE(SBC.BILLING_CLEAR_DATE, 'YYYYMMDD') AS BILLING_CLEAR_DATE,
  -- DATE SELISIH
  	CASE 
	    WHEN TRY_TO_DATE(SDCSG.DELIVERY_ACTUAL_DATE, 'YYYYMMDD') IS NOT NULL AND TRY_TO_DATE(SSO.SALES_ORDER_DATE, 'YYYYMMDD') IS NOT NULL 
	    THEN TO_VARCHAR(DATEDIFF(DAY, TRY_TO_DATE(SSO.SALES_ORDER_DATE, 'YYYYMMDD'), TRY_TO_DATE(SDCSG.DELIVERY_ACTUAL_DATE, 'YYYYMMDD')))
	    WHEN TRY_TO_DATE(SDCSG.DELIVERY_ACTUAL_DATE, 'YYYYMMDD') IS NULL AND TRY_TO_DATE(SSO.SALES_ORDER_DATE, 'YYYYMMDD') IS NOT NULL 
	    THEN TO_VARCHAR(DATEDIFF(DAY, TRY_TO_DATE(SSO.SALES_ORDER_DATE, 'YYYYMMDD'), CURRENT_DATE))
	    ELSE 'Unknown'
	END AS SELISIH_SO_FRA_DO_CSGMNT,
	CASE 
	    WHEN TRY_TO_DATE(SD.DELIVERY_ACTUAL_DATE, 'YYYYMMDD') IS NOT NULL AND TRY_TO_DATE(SDCSG.DELIVERY_ACTUAL_DATE, 'YYYYMMDD') IS NOT NULL 
	    THEN TO_VARCHAR(DATEDIFF(DAY, TRY_TO_DATE(SDCSG.DELIVERY_ACTUAL_DATE, 'YYYYMMDD'), TRY_TO_DATE(SD.DELIVERY_ACTUAL_DATE, 'YYYYMMDD')))
	    WHEN TRY_TO_DATE(SD.DELIVERY_ACTUAL_DATE, 'YYYYMMDD') IS NULL AND TRY_TO_DATE(SDCSG.DELIVERY_ACTUAL_DATE, 'YYYYMMDD') IS NOT NULL 
	    THEN TO_VARCHAR(DATEDIFF(DAY, TRY_TO_DATE(SDCSG.DELIVERY_ACTUAL_DATE, 'YYYYMMDD'), CURRENT_DATE))
	    ELSE 'Unknown'
	END AS SELISIH_DO_CSGMNT_DO_FRA,
	CASE 
	    WHEN TRY_TO_DATE(SB.BILLING_DATE, 'YYYYMMDD') IS NOT NULL AND TRY_TO_DATE(SD.DELIVERY_ACTUAL_DATE, 'YYYYMMDD') IS NOT NULL 
	    THEN TO_VARCHAR(DATEDIFF(DAY, TRY_TO_DATE(SD.DELIVERY_ACTUAL_DATE, 'YYYYMMDD'), TRY_TO_DATE(SB.BILLING_DATE, 'YYYYMMDD')))
		WHEN TRY_TO_DATE(SB.BILLING_DATE, 'YYYYMMDD') IS NULL AND TRY_TO_DATE(SD.DELIVERY_ACTUAL_DATE, 'YYYYMMDD') IS NOT NULL 
	    THEN TO_VARCHAR(DATEDIFF(DAY, TRY_TO_DATE(SD.DELIVERY_ACTUAL_DATE, 'YYYYMMDD'), CURRENT_DATE))
	    ELSE 'Unknown'
	END AS SELISIH_DO_FRA_BILL,
	CASE 
	    WHEN TRY_TO_DATE(SBC.BILLING_CLEAR_DATE, 'YYYYMMDD') IS NOT NULL AND TRY_TO_DATE(SB.BILLING_DATE, 'YYYYMMDD') IS NOT NULL 
	    THEN TO_VARCHAR(DATEDIFF(DAY, TRY_TO_DATE(SB.BILLING_DATE, 'YYYYMMDD'), TRY_TO_DATE(SBC.BILLING_CLEAR_DATE, 'YYYYMMDD')))
		WHEN TRY_TO_DATE(SBC.BILLING_CLEAR_DATE, 'YYYYMMDD') IS NULL AND TRY_TO_DATE(SB.BILLING_DATE, 'YYYYMMDD') IS NOT NULL 
	    THEN TO_VARCHAR(DATEDIFF(DAY, TRY_TO_DATE(SB.BILLING_DATE, 'YYYYMMDD'), CURRENT_DATE))
	    ELSE 'Unknown'
	END AS SELISIH_BILL_BILLCLEARING,
		CASE 
	    WHEN TRY_TO_DATE(SBC.BILLING_CLEAR_DATE, 'YYYYMMDD') IS NOT NULL AND TRY_TO_DATE(SD.DELIVERY_ACTUAL_DATE, 'YYYYMMDD') IS NOT NULL 
	    THEN TO_VARCHAR(DATEDIFF(DAY, TRY_TO_DATE(SD.DELIVERY_ACTUAL_DATE, 'YYYYMMDD'), TRY_TO_DATE(SBC.BILLING_CLEAR_DATE, 'YYYYMMDD')))
		WHEN TRY_TO_DATE(SBC.BILLING_CLEAR_DATE, 'YYYYMMDD') IS NULL AND TRY_TO_DATE(SD.DELIVERY_ACTUAL_DATE, 'YYYYMMDD') IS NOT NULL 
	    THEN TO_VARCHAR(DATEDIFF(DAY, TRY_TO_DATE(SD.DELIVERY_ACTUAL_DATE, 'YYYYMMDD'), CURRENT_DATE))
	    ELSE 'Unknown'
	END AS SELISIH_DO_FRA_BILLCLEARING,
	-- BACKDATE (Y/N)
		CASE 
	    WHEN TRY_TO_DATE(SSO.SALES_ORDER_CREATED_DATE, 'YYYYMMDD') IS NULL AND TRY_TO_DATE(SSO.SALES_ORDER_DATE, 'YYYYMMDD') IS NULL THEN 'Unknown'
	    WHEN TRY_TO_DATE(SSO.SALES_ORDER_CREATED_DATE, 'YYYYMMDD') IS NOT NULL AND TRY_TO_DATE(SSO.SALES_ORDER_DATE, 'YYYYMMDD') IS NULL THEN 'Real-time entry'
	    WHEN TRY_TO_DATE(SSO.SALES_ORDER_CREATED_DATE, 'YYYYMMDD') = TRY_TO_DATE(SSO.SALES_ORDER_DATE, 'YYYYMMDD') THEN 'Real-time entry'
	    WHEN TRY_TO_DATE(SSO.SALES_ORDER_DATE, 'YYYYMMDD') > TRY_TO_DATE(SSO.SALES_ORDER_CREATED_DATE, 'YYYYMMDD') THEN 'Forward-dated entry'
	    WHEN TRY_TO_DATE(SSO.SALES_ORDER_DATE, 'YYYYMMDD') < TRY_TO_DATE(SSO.SALES_ORDER_CREATED_DATE, 'YYYYMMDD') THEN 'Backdated entry'
	    ELSE 'Backdated entry'
	END AS SO_FRA_BACKDATE,
	CASE 
	    WHEN TRY_TO_DATE(SOCSG.SALES_ORDER_CREATED_DATE, 'YYYYMMDD') IS NULL AND TRY_TO_DATE(SOCSG.SALES_ORDER_DATE, 'YYYYMMDD') IS NULL THEN 'Unknown'
	    WHEN TRY_TO_DATE(SOCSG.SALES_ORDER_CREATED_DATE, 'YYYYMMDD') IS NOT NULL AND TRY_TO_DATE(SOCSG.SALES_ORDER_DATE, 'YYYYMMDD') IS NULL THEN 'Real-time entry'
	    WHEN TRY_TO_DATE(SOCSG.SALES_ORDER_CREATED_DATE, 'YYYYMMDD') = TRY_TO_DATE(SOCSG.SALES_ORDER_DATE, 'YYYYMMDD') THEN 'Real-time entry'
	    WHEN TRY_TO_DATE(SOCSG.SALES_ORDER_DATE, 'YYYYMMDD') > TRY_TO_DATE(SOCSG.SALES_ORDER_CREATED_DATE, 'YYYYMMDD') THEN 'Forward-dated entry'
	    WHEN TRY_TO_DATE(SOCSG.SALES_ORDER_DATE, 'YYYYMMDD') < TRY_TO_DATE(SOCSG.SALES_ORDER_CREATED_DATE, 'YYYYMMDD') THEN 'Backdated entry'
	    ELSE 'Backdated entry'
	END AS SO_CSGMNT_BACKDATE,
	CASE  
	    WHEN TRY_TO_DATE(SDCSG.DELIVERY_CREATED_DATE, 'YYYYMMDD') IS NULL AND TRY_TO_DATE(SDCSG.DELIVERY_ACTUAL_DATE, 'YYYYMMDD') IS NULL THEN 'Unknown'
	    WHEN TRY_TO_DATE(SDCSG.DELIVERY_CREATED_DATE, 'YYYYMMDD') IS NOT NULL AND TRY_TO_DATE(SDCSG.DELIVERY_ACTUAL_DATE, 'YYYYMMDD') IS NULL THEN 'Real-time entry'
	    WHEN TRY_TO_DATE(SDCSG.DELIVERY_CREATED_DATE, 'YYYYMMDD') = TRY_TO_DATE(SDCSG.DELIVERY_ACTUAL_DATE, 'YYYYMMDD') THEN 'Real-time entry'
	    WHEN TRY_TO_DATE(SDCSG.DELIVERY_ACTUAL_DATE, 'YYYYMMDD') > TRY_TO_DATE(SDCSG.DELIVERY_CREATED_DATE, 'YYYYMMDD') THEN 'Forward-dated entry'
	    WHEN TRY_TO_DATE(SDCSG.DELIVERY_ACTUAL_DATE, 'YYYYMMDD') < TRY_TO_DATE(SDCSG.DELIVERY_CREATED_DATE, 'YYYYMMDD') THEN 'Backdated entry'
	    ELSE 'Backdated entry'
	END AS DO_CSGMNT_BACKDATE,
		CASE  
	    WHEN TRY_TO_DATE(SD.DELIVERY_CREATED_DATE, 'YYYYMMDD') IS NULL AND TRY_TO_DATE(SD.DELIVERY_ACTUAL_DATE, 'YYYYMMDD') IS NULL THEN 'Unknown'
	    WHEN TRY_TO_DATE(SD.DELIVERY_CREATED_DATE, 'YYYYMMDD') IS NOT NULL AND TRY_TO_DATE(SD.DELIVERY_ACTUAL_DATE, 'YYYYMMDD') IS NULL THEN 'Real-time entry'
	    WHEN TRY_TO_DATE(SD.DELIVERY_CREATED_DATE, 'YYYYMMDD') = TRY_TO_DATE(SD.DELIVERY_ACTUAL_DATE, 'YYYYMMDD') THEN 'Real-time entry'
	    WHEN TRY_TO_DATE(SD.DELIVERY_ACTUAL_DATE, 'YYYYMMDD') > TRY_TO_DATE(SD.DELIVERY_CREATED_DATE, 'YYYYMMDD') THEN 'Forward-dated entry'
	    WHEN TRY_TO_DATE(SD.DELIVERY_ACTUAL_DATE, 'YYYYMMDD') < TRY_TO_DATE(SD.DELIVERY_CREATED_DATE, 'YYYYMMDD') THEN 'Backdated entry'
	    ELSE 'Backdated entry'
	END AS DO_FRA_BACKDATE,
	CASE 
	    WHEN TRY_TO_DATE(SB.BILLING_CREATED_DATE, 'YYYYMMDD') IS NULL AND TRY_TO_DATE(SB.BILLING_DATE, 'YYYYMMDD') IS NULL THEN 'Unknown'
	    WHEN TRY_TO_DATE(SB.BILLING_CREATED_DATE, 'YYYYMMDD') IS NOT NULL AND TRY_TO_DATE(SB.BILLING_DATE, 'YYYYMMDD') IS NULL THEN 'Real-time entry'
	    WHEN TRY_TO_DATE(SB.BILLING_CREATED_DATE, 'YYYYMMDD') = TRY_TO_DATE(SB.BILLING_DATE, 'YYYYMMDD') THEN 'Real-time entry'
	    WHEN TRY_TO_DATE(SB.BILLING_DATE, 'YYYYMMDD') > TRY_TO_DATE(SB.BILLING_CREATED_DATE, 'YYYYMMDD') THEN 'Forward-dated entry'
	    WHEN TRY_TO_DATE(SB.BILLING_DATE, 'YYYYMMDD') < TRY_TO_DATE(SB.BILLING_CREATED_DATE, 'YYYYMMDD') THEN 'Backdated entry'
	    ELSE 'Backdated entry'
	END AS BILL_BACKDATE,
	-- BACKDATE CREATED DATE - DOC DATE
	CASE 
	    WHEN TRY_TO_DATE(SSO.SALES_ORDER_CREATED_DATE, 'YYYYMMDD') IS NOT NULL AND TRY_TO_DATE(SSO.SALES_ORDER_DATE, 'YYYYMMDD') IS NOT NULL 
	    THEN TO_VARCHAR(DATEDIFF(DAY, TRY_TO_DATE(SSO.SALES_ORDER_CREATED_DATE, 'YYYYMMDD'), TRY_TO_DATE(SSO.SALES_ORDER_DATE, 'YYYYMMDD')))
		WHEN TRY_TO_DATE(SSO.SALES_ORDER_CREATED_DATE, 'YYYYMMDD') IS NOT NULL AND TRY_TO_DATE(SSO.SALES_ORDER_DATE, 'YYYYMMDD') IS NULL 
	    THEN '0'
	    ELSE 'Unknown'
	END AS SO_FRA_DIFF_DAYS,
		CASE 
	    WHEN TRY_TO_DATE(SOCSG.SALES_ORDER_CREATED_DATE, 'YYYYMMDD') IS NOT NULL AND TRY_TO_DATE(SOCSG.SALES_ORDER_DATE, 'YYYYMMDD') IS NOT NULL 
	    THEN TO_VARCHAR(DATEDIFF(DAY, TRY_TO_DATE(SOCSG.SALES_ORDER_CREATED_DATE, 'YYYYMMDD'), TRY_TO_DATE(SOCSG.SALES_ORDER_DATE, 'YYYYMMDD')))
		WHEN TRY_TO_DATE(SOCSG.SALES_ORDER_CREATED_DATE, 'YYYYMMDD') IS NOT NULL AND TRY_TO_DATE(SOCSG.SALES_ORDER_DATE, 'YYYYMMDD') IS NULL 
	    THEN '0'
	    ELSE 'Unknown'
	END AS SO_CSGMNT_DIFF_DAYS,
		CASE 
	    WHEN TRY_TO_DATE(SDCSG.DELIVERY_CREATED_DATE, 'YYYYMMDD') IS NOT NULL AND TRY_TO_DATE(SDCSG.DELIVERY_ACTUAL_DATE, 'YYYYMMDD') IS NOT NULL 
	    THEN TO_VARCHAR(DATEDIFF(DAY, TRY_TO_DATE(SDCSG.DELIVERY_CREATED_DATE, 'YYYYMMDD'), TRY_TO_DATE(SDCSG.DELIVERY_ACTUAL_DATE, 'YYYYMMDD')))
		WHEN TRY_TO_DATE(SDCSG.DELIVERY_CREATED_DATE, 'YYYYMMDD') IS NOT NULL AND TRY_TO_DATE(SDCSG.DELIVERY_ACTUAL_DATE, 'YYYYMMDD') IS NULL 
	    THEN '0'
	    ELSE 'Unknown'
	END AS DO_CSGMNT_DIFF_DAYS,
	CASE 
	    WHEN TRY_TO_DATE(SD.DELIVERY_CREATED_DATE, 'YYYYMMDD') IS NOT NULL AND TRY_TO_DATE(SD.DELIVERY_ACTUAL_DATE, 'YYYYMMDD') IS NOT NULL 
	    THEN TO_VARCHAR(DATEDIFF(DAY, TRY_TO_DATE(SD.DELIVERY_CREATED_DATE, 'YYYYMMDD'), TRY_TO_DATE(SD.DELIVERY_ACTUAL_DATE, 'YYYYMMDD')))
		WHEN TRY_TO_DATE(SD.DELIVERY_CREATED_DATE, 'YYYYMMDD') IS NOT NULL AND TRY_TO_DATE(SD.DELIVERY_ACTUAL_DATE, 'YYYYMMDD') IS NULL 
	    THEN '0'
	    ELSE 'Unknown'
	END AS DO_FRA_DIFF_DAYS,
	CASE 
	    WHEN TRY_TO_DATE(SB.BILLING_CREATED_DATE, 'YYYYMMDD') IS NOT NULL AND TRY_TO_DATE(SB.BILLING_DATE, 'YYYYMMDD') IS NOT NULL 
	    THEN TO_VARCHAR(DATEDIFF(DAY, TRY_TO_DATE(SB.BILLING_CREATED_DATE, 'YYYYMMDD'), TRY_TO_DATE(SB.BILLING_DATE, 'YYYYMMDD')))
		WHEN TRY_TO_DATE(SB.BILLING_CREATED_DATE, 'YYYYMMDD') IS NOT NULL AND TRY_TO_DATE(SB.BILLING_DATE, 'YYYYMMDD') IS NULL 
	    THEN '0'
	    ELSE 'Unknown'
	END AS BILL_DIFF_DAYS,
-- FROM AND WHERE
FROM PROD_DB.DSTR_BI_COMMUNITY.F_SALES_FLOW_ORDER_DOCUMENT_FLOW FLOW
  LEFT JOIN PROD_DB.DSTR_BI_COMMUNITY.F_SALES_SALES_ORDER SSO
    ON FLOW.SALES_ORDER_NUMBER = SSO.SALES_ORDER_NUMBER
	AND FLOW.SOURCE_SYSTEM = SSO.SOURCE_SYSTEM
	AND FLOW.SALES_ORDER_ITEM = SSO.SALES_ORDER_ITEM 
  LEFT JOIN PROD_DB.DSTR_BI_COMMUNITY.F_SALES_SALES_ORDER SOCSG
    ON FLOW.SALES_ORDER_NUMBER = SOCSG.SALES_ORDER_NUMBER
	AND FLOW.SOURCE_SYSTEM = SOCSG.SOURCE_SYSTEM
	AND FLOW.SALES_ORDER_ITEM = SOCSG.SALES_ORDER_ITEM 
  LEFT JOIN PROD_DB.DSTR_BI_COMMUNITY.D_SALES_CUSTOMER CUST
    ON SSO.CUSTOMER = CUST.CUSTOMER
    AND SSO.SOURCE_SYSTEM = CUST.SOURCE_SYSTEM
  LEFT JOIN PROD_DB.DSTR_BI_COMMUNITY.D_SALES_CUSTOMER CUSTSH
    ON FLOW.CUSTOMER_SHIP_TO = CUSTSH.CUSTOMER
    AND FLOW.SOURCE_SYSTEM = CUSTSH.SOURCE_SYSTEM
  LEFT JOIN PROD_DB.DSTR_BI_COMMUNITY.F_SALES_DELIVERY SD
    ON FLOW.DELIVERY_NUMBER  = SD.DELIVERY_NUMBER  
    AND FLOW.SALES_ORDER_NUMBER = SD.REFERENCE_SALES_ORDER_NUMBER 
    AND FLOW.DELIVERY_ITEM = SD.DELIVERY_ITEM
  LEFT JOIN PROD_DB.DSTR_BI_COMMUNITY.F_SALES_DELIVERY SDCSG
    ON FLOW.DELIVERY_NUMBER  = SDCSG.DELIVERY_NUMBER  
    AND FLOW.SALES_ORDER_NUMBER = SDCSG.REFERENCE_SALES_ORDER_NUMBER 
    AND FLOW.DELIVERY_ITEM = SDCSG.DELIVERY_ITEM
  LEFT JOIN PROD_DB.DSTR_BI_COMMUNITY.F_SALES_BILLING SB
    ON FLOW.BILLING_NUMBER = SB.BILLING_NUMBER
    AND FLOW.SALES_ORDER_NUMBER = SB.REFERENCE_SALES_ORDER_NUMBER 
    AND FLOW.BILLING_ITEM = SB.BILLING_ITEM 
  LEFT JOIN PROD_DB.DSTR_BI_COMMUNITY.F_SALES_BILLING_CLEARING SBC
    ON FLOW.BILLING_NUMBER = SBC.BILLING_NUMBER
  LEFT JOIN PROD_DB.DSTR_BI_COMMUNITY.D_SALES_DISTRIBUTION_CHANNEL SDC
    ON SSO.DISTRIBUTION_CHANNEL = SDC.DISTRIBUTION_CHANNEL
    AND SSO.SOURCE_SYSTEM = SDC.SOURCE_SYSTEM 
  LEFT JOIN PROD_DB.DSTR_BI_COMMUNITY.D_SALES_REGION DSR
    ON CUST.REGION = DSR.REGION
    AND CUST.SOURCE_SYSTEM = DSR.SOURCE_SYSTEM
WHERE NOT (
    -- Kondisi 1: billing NULL, tapi ada baris lain dengan billing NOT NULL untuk kombinasi SO & DO
    FLOW.BILLING_NUMBER IS NULL
    AND (FLOW.SALES_ORDER_NUMBER, FLOW.DELIVERY_NUMBER) IN (
        SELECT SALES_ORDER_NUMBER, DELIVERY_NUMBER
        FROM PROD_DB.DSTR_BI_COMMUNITY.F_SALES_FLOW_ORDER_DOCUMENT_FLOW
        WHERE BILLING_NUMBER IS NOT NULL)
    OR
    -- Kondisi 2: DO & BILL keduanya NULL, tapi ada baris lain untuk SO yang sama dengan DO dan BILL terisi
    (FLOW.DELIVERY_NUMBER IS NULL AND FLOW.BILLING_NUMBER IS NULL
        AND FLOW.SALES_ORDER_NUMBER IN (
            SELECT SALES_ORDER_NUMBER
            FROM PROD_DB.DSTR_BI_COMMUNITY.F_SALES_FLOW_ORDER_DOCUMENT_FLOW
            WHERE DELIVERY_NUMBER IS NOT NULL AND BILLING_NUMBER IS NOT NULL)))    
  AND SSO.COMPANY_CODE = 'ID7A'
  AND TRY_TO_DATE(SSO.SALES_ORDER_CREATED_DATE, 'YYYYMMDD') BETWEEN '2025-07-01' AND CURRENT_DATE
  AND DSR.COUNTRY = 'ID'
  GROUP BY ALL;
